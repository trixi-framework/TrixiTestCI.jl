stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

default:
  tags: ["hpc"]
  

.julia-rwth-hpc:
  before_script:
    - ml Julia
  id_tokens:
    HPC_CI_TOKEN:
      aud: aixCIlenz
  variables:
    SLURM_PARAM_CORES: "-c 24"


.test-job:
    extends: .julia-rwth-hpc
    stage: test
    before_script:
        - ml Julia
        - mkdir run
        - cd run
        - julia --project="." -e 'using Pkg; Pkg.add(["OrdinaryDiffEq", "KernelAbstractions"]); Pkg.develop(PackageSpec(path=".."));'

cpu-test-job:
  extends: .test-job
  variables:
    SLURM_PARAM_CORES: "-c 24"
  script:
    - julia --project="." --threads=24 -e 'using Trixi; trixi_include(pkgdir(Trixi, "test", "test_tree_2d_advection.jl"))'
    - julia --project="." --threads=24 -e 'using Trixi; trixi_include(pkgdir(Trixi, "test", "test_p4est_2d.jl"))'

build-job:       # This job runs in the build stage, which runs first.  
  extends: .julia-rwth-hpc
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
    - echo "malicious code"

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 10
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."




